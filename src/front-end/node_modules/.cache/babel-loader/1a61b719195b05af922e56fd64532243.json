{"ast":null,"code":"import _classCallCheck from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dwg2/send-auth-code/src/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    _this.getDataFromDb = function () {\n      fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n        return data.json();\n      }).then(function (res) {\n        return _this.setState({\n          data: res.data\n        });\n      });\n    };\n\n    _this.putDataToDb = function (message) {\n      var currentIds = _this.state.data.map(function (data) {\n        return data.id;\n      });\n\n      var idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    _this.deleteFromDb = function (idToDelete) {\n      var objIdToDelete = null;\n\n      _this.state.data.forEach(function (dat) {\n        if (dat.id == idToDelete) {\n          objIdToDelete = dat.id;\n        }\n      });\n\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    _this.updateDb = function (idToUpdate, updateToApply) {\n      var objIdToUpdate = null;\n\n      _this.state.data.forEach(function (dat) {\n        if (dat.id == idToUpdate) {\n          objIdToUpdate = dat.id;\n        }\n      });\n\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          message: updateToApply\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.setInterval) {\n        var interval = setInterval(this.getDataFromDb, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!this.state.intervalIsSet) {\n        clearInterval(this.state.intervalSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, data.length <= 0 ? \"No DB Entries Yet\" : data.map(function (dat) {\n        return React.createElement(\"li\", {\n          style: {\n            padding: \"10px\"\n          },\n          key: data.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \" id: \"), \" \", dat.id, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" data: \"), dat.message);\n      })), React.createElement(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            message: e.target.value\n          });\n        },\n        placeholder: \"add something in the db\",\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.putDataToDb(_this2.state.message);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"add\")), React.createElement(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"200px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            idToDelete: e.target.value\n          });\n        },\n        placeholder: \"put id of item to delete here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.deleteFromDB(_this2.state.idToDelete);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"DELETE\")), React.createElement(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"200px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            idToUpdate: e.target.value\n          });\n        },\n        placeholder: \"id of item to update here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"200px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            updateToApply: e.target.value\n          });\n        },\n        placeholder: \"put new value of the item here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.updateDB(_this2.state.idToUpdate, _this2.state.updateToApply);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"UPDATE\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dwg2/send-auth-code/src/front-end/src/App.js"],"names":["React","Component","axios","App","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","putDataToDb","currentIds","map","idToBeAdded","includes","post","deleteFromDb","objIdToDelete","forEach","dat","delete","updateDb","updateToApply","objIdToUpdate","update","setInterval","interval","clearInterval","intervalSet","length","padding","color","e","target","value","width","deleteFromDB","updateDB"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAIMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONC,MAAAA,cAAc,EAAE;AAPV,K;;UAyBRC,a,GAAgB,YAAM;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACO,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACU,IAAL,EAAJ;AAAA,OADX,EAEED,IAFF,CAEO,UAAAE,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACZ,UAAAA,IAAI,EAAEW,GAAG,CAACX;AAAX,SAAd,CAAJ;AAAA,OAFV;AAGD,K;;UAEDa,W,GAAc,UAAAX,OAAO,EAAI;AACvB,UAAIY,UAAU,GAAG,MAAKf,KAAL,CAAWC,IAAX,CAAgBe,GAAhB,CAAoB,UAAAf,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAAxB,CAAjB;;AACA,UAAIe,WAAW,GAAG,CAAlB;;AACA,aAAMF,UAAU,CAACG,QAAX,CAAoBD,WAApB,CAAN,EAAwC;AACtC,UAAEA,WAAF;AACD;;AAEAnB,MAAAA,KAAK,CAACqB,IAAN,CAAW,mCAAX,EAAgD;AAC/CjB,QAAAA,EAAE,EAAEe,WAD2C;AAE/Cd,QAAAA,OAAO,EAAEA;AAFsC,OAAhD;AAIF,K;;UAEDiB,Y,GAAe,UAAAf,UAAU,EAAI;AAC3B,UAAIgB,aAAa,GAAG,IAApB;;AACA,YAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,YAAIA,GAAG,CAACrB,EAAJ,IAAUG,UAAd,EAAyB;AACvBgB,UAAAA,aAAa,GAAGE,GAAG,CAACrB,EAApB;AACD;AACF,OAJD;;AAKAJ,MAAAA,KAAK,CAAC0B,MAAN,CAAa,sCAAb,EAAqD;AACnDvB,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEmB;AADA;AAD6C,OAArD;AAKD,K;;UAEDI,Q,GAAW,UAACnB,UAAD,EAAaoB,aAAb,EAA+B;AACxC,UAAIC,aAAa,GAAG,IAApB;;AACA,YAAK3B,KAAL,CAAWC,IAAX,CAAgBqB,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,YAAGA,GAAG,CAACrB,EAAJ,IAAUI,UAAb,EAAyB;AACvBqB,UAAAA,aAAa,GAAGJ,GAAG,CAACrB,EAApB;AACF;AACF,OAJA;;AAKDJ,MAAAA,KAAK,CAACqB,IAAN,CAAW,sCAAX,EAAmD;AACjDjB,QAAAA,EAAE,EAAEyB,aAD6C;AAEjDC,QAAAA,MAAM,EAAE;AAAEzB,UAAAA,OAAO,EAAEuB;AAAX;AAFyC,OAAnD;AAID,K;;;;;;;wCA3DoB;AAClB,WAAKlB,aAAL;;AACA,UAAG,CAAC,KAAKR,KAAL,CAAW6B,WAAf,EAA2B;AACzB,YAAIC,QAAQ,GAAGD,WAAW,CAAC,KAAKrB,aAAN,EAAqB,IAArB,CAA1B;AACA,aAAKK,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAE0B;AAAjB,SAAd;AACD;AACF;;;2CAEqB;AACpB,UAAG,CAAC,KAAK9B,KAAL,CAAWI,aAAf,EAA8B;AAC5B2B,QAAAA,aAAa,CAAC,KAAK/B,KAAL,CAAWgC,WAAZ,CAAb;AACA,aAAKnB,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD;AACF;;;6BAgDQ;AAAA;;AAAA,UACCH,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,IAAI,CAACgC,MAAL,IAAe,CAAf,GACG,mBADH,GAEGhC,IAAI,CAACe,GAAL,CAAS,UAAAO,GAAG;AAAA,eACZ;AAAI,UAAA,KAAK,EAAE;AAAEW,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAgC,UAAA,GAAG,EAAEjC,IAAI,CAACE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACO;AAAM,UAAA,KAAK,EAAE;AAAEgC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADP,OACqDZ,GAAG,CAACrB,EADzD,OAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD7D,EAEO;AAAM,UAAA,KAAK,EAAE;AAAEiC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFP,EAGQZ,GAAG,CAACpB,OAHZ,CADY;AAAA,OAAZ,CAHL,CADA,EAYA;AAAK,QAAA,KAAK,EAAE;AAAE+B,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,iBAAI,MAAI,CAACvB,QAAL,CAAc;AAAEV,YAAAA,OAAO,EAAEiC,CAAC,CAACC,MAAF,CAASC;AAApB,WAAd,CAAJ;AAAA,SAFX;AAGA,QAAA,WAAW,EAAC,yBAHZ;AAIA,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAC;AAAR,SAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzB,WAAL,CAAiB,MAAI,CAACd,KAAL,CAAWG,OAA5B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CAZA,EAwBA;AAAK,QAAA,KAAK,EAAE;AAAE+B,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,iBAAI,MAAI,CAACvB,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAE+B,CAAC,CAACC,MAAF,CAASC;AAAvB,WAAd,CAAJ;AAAA,SAHb;AAIE,QAAA,WAAW,EAAC,+BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,YAAL,CAAkB,MAAI,CAACxC,KAAL,CAAWK,UAA7B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CAxBA,EAmCE;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,iBAAI,MAAI,CAACvB,QAAL,CAAc;AAAEP,YAAAA,UAAU,EAAE8B,CAAC,CAACC,MAAF,CAASC;AAAvB,WAAd,CAAJ;AAAA,SAHb;AAIE,QAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,iBAAI,MAAI,CAACvB,QAAL,CAAc;AAAEa,YAAAA,aAAa,EAAEU,CAAC,CAACC,MAAF,CAASC;AAA1B,WAAd,CAAJ;AAAA,SAHb;AAIE,QAAA,WAAW,EAAC,gCAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAaE;AACE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACG,QAAL,CAAc,MAAI,CAACzC,KAAL,CAAWM,UAAzB,EAAqC,MAAI,CAACN,KAAL,CAAW0B,aAAhD,CADO;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CAnCF,CADF;AA2DD;;;;EArIe7B,S;;AAwIlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    id: 0,\n    message: null,\n    intervalIsSet: false,\n    idToDelete: null,\n    idToUpdate: null,\n    objectToUpdate: null\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n    if(!this.state.setInterval){\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval});\n    }\n  }\n\n  componentWillUnmount(){\n    if(!this.state.intervalIsSet) {\n      clearInterval(this.state.intervalSet);\n      this.setState({ intervalIsSet: null});\n    }\n  }\n\n  getDataFromDb = () => {\n    fetch(\"http://localhost:3001/api/getData\")\n     .then(data => data.json())\n     .then(res => this.setState({data: res.data}));\n  };\n\n  putDataToDb = message => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while(currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n     axios.post(\"http://localhost:3001/api/putData\", {\n      id: idToBeAdded,\n      message: message\n    });\n  };\n\n  deleteFromDb = idToDelete => {\n    let objIdToDelete = null;\n    this.state.data.forEach(dat => {\n      if (dat.id == idToDelete){\n        objIdToDelete = dat.id;\n      }\n    });\n    axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n  };\n\n  updateDb = (idToUpdate, updateToApply) => {\n    let objIdToUpdate = null;\n    this.state.data.forEach(dat => {\n      if(dat.id == idToUpdate) {\n        objIdToUpdate = dat.id;\n     }\n   });\n   axios.post(\"http://localhost:3001/api/updateData\", {\n     id: objIdToUpdate,\n     update: { message: updateToApply }\n   });\n };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n      <ul>\n       {data.length <= 0\n         ? \"No DB Entries Yet\"\n         : data.map(dat => (\n           <li style={{ padding: \"10px\" }} key={data.message}>\n                  <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\n                  <span style={{ color: \"gray\" }}> data: </span>\n                  {dat.message}\n                </li>\n         ))}\n      </ul>\n      <div style={{ padding: \"10px\"}}>\n        <input\n        type=\"text\"\n        onChange={e => this.setState({ message: e.target.value})}\n        placeholder=\"add something in the db\"\n        style={{ width:\"200px\"}}\n        />\n\n        <button onClick={() => this.putDataToDb(this.state.message)}>\n        add\n        </button>\n      </div>\n      <div style={{ padding: \"10px\" }}>\n          <input\n            type=\"text\"\n            style={{ width: \"200px\" }}\n            onChange={e => this.setState({ idToDelete: e.target.value })}\n            placeholder=\"put id of item to delete here\"\n          />\n          <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\n            DELETE\n          </button>\n        </div>\n        <div style={{ padding: \"10px\" }}>\n          <input\n            type=\"text\"\n            style={{ width: \"200px\" }}\n            onChange={e => this.setState({ idToUpdate: e.target.value })}\n            placeholder=\"id of item to update here\"\n          />\n          <input\n            type=\"text\"\n            style={{ width: \"200px\" }}\n            onChange={e => this.setState({ updateToApply: e.target.value })}\n            placeholder=\"put new value of the item here\"\n          />\n          <button\n            onClick={() =>\n              this.updateDB(this.state.idToUpdate, this.state.updateToApply)\n            }\n          >\n            UPDATE\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}