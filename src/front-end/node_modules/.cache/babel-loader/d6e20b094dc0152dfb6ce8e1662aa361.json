{"ast":null,"code":"import _classCallCheck from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dwg2/send-auth-code/src/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dwg2/send-auth-code/src/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToMatch: null,\n      isAMatch: false,\n      objectToUpdate: null,\n      hasBeenSubmitted: false\n    };\n\n    _this.getDataFromDb = function () {\n      fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n        return data.json();\n      }).then(function (res) {\n        return _this.setState({\n          data: res.data\n        });\n      });\n    };\n\n    _this.putDataToDb = function (message) {\n      var currentIds = _this.state.data.map(function (data) {\n        return data.id;\n      });\n\n      var idToBeAdded = 0;\n\n      _this.setState({\n        hasBeenSubmitted: true\n      });\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      _this.setState({\n        idToMatch: idToBeAdded\n      });\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    _this.resetPage = function () {\n      _this.setState({\n        hasBeenSubmitted: false\n      });\n    };\n\n    _this.matchFromDb = function (codeToMatch) {\n      var objIdToMatch = null;\n\n      _this.state.data.forEach(function (dat) {\n        if (dat.code == codeToMatch) {\n          _this.setState({\n            isAMatch: true\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.setInterval) {\n        var interval = setInterval(this.getDataFromDb, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!this.state.intervalIsSet) {\n        clearInterval(this.state.intervalSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      var hasBeenSubmitted = this.state.hasBeenSubmitted;\n      var isAMatch = this.state.isAMatch;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, hasBeenSubmitted == false ? \"Get a code sent to your phone via SMS\" : data.map(function (dat) {\n        return React.createElement(\"li\", {\n          style: {\n            padding: \"10px\"\n          },\n          key: data.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \" id: \"), \" \", dat.id, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \" data: \"), dat.message, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            color: \"gray\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" code: \"), \" \", dat.code);\n      }), isAMatch == false ? \"The Code doesn't match\" : \"The Code Matches!\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, hasBeenSubmitted == false ? React.createElement(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            message: e.target.value\n          });\n        },\n        placeholder: \"Enter your phone number to recieve a code\",\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.putDataToDb(_this2.state.message);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Send Me A Code!\")) : React.createElement(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"200px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            code: e.target.value\n          });\n        },\n        placeholder: \"Enter the code your recieved via SMS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.matchFromDb(_this2.state.code);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Check Code\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.resetPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Reset\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dwg2/send-auth-code/src/front-end/src/App.js"],"names":["React","Component","axios","App","state","data","id","message","intervalIsSet","idToMatch","isAMatch","objectToUpdate","hasBeenSubmitted","getDataFromDb","fetch","then","json","res","setState","putDataToDb","currentIds","map","idToBeAdded","includes","post","resetPage","matchFromDb","codeToMatch","objIdToMatch","forEach","dat","code","setInterval","interval","clearInterval","intervalSet","padding","color","e","target","value","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAIMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,SAAS,EAAE,IALL;AAMNC,MAAAA,QAAQ,EAAE,KANJ;AAONC,MAAAA,cAAc,EAAE,IAPV;AAQNC,MAAAA,gBAAgB,EAAE;AARZ,K;;UA0BRC,a,GAAgB,YAAM;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACEC,IADF,CACO,UAAAV,IAAI;AAAA,eAAIA,IAAI,CAACW,IAAL,EAAJ;AAAA,OADX,EAEED,IAFF,CAEO,UAAAE,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACb,UAAAA,IAAI,EAAEY,GAAG,CAACZ;AAAX,SAAd,CAAJ;AAAA,OAFV;AAGD,K;;UAEDc,W,GAAc,UAAAZ,OAAO,EAAI;AACvB,UAAIa,UAAU,GAAG,MAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoB,UAAAhB,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAAxB,CAAjB;;AACA,UAAIgB,WAAW,GAAG,CAAlB;;AACA,YAAKJ,QAAL,CAAc;AAAEN,QAAAA,gBAAgB,EAAE;AAApB,OAAd;;AACA,aAAMQ,UAAU,CAACG,QAAX,CAAoBD,WAApB,CAAN,EAAwC;AACtC,UAAEA,WAAF;AACD;;AACA,YAAKJ,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEa;AAAb,OAAd;;AACApB,MAAAA,KAAK,CAACsB,IAAN,CAAW,mCAAX,EAAgD;AAC/ClB,QAAAA,EAAE,EAAEgB,WAD2C;AAE/Cf,QAAAA,OAAO,EAAEA;AAFsC,OAAhD;AAIF,K;;UAEDkB,S,GAAY,YAAM;AAChB,YAAKP,QAAL,CAAc;AAAEN,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD,K;;UAEDc,W,GAAc,UAAAC,WAAW,EAAI;AAC3B,UAAIC,YAAY,GAAG,IAAnB;;AACA,YAAKxB,KAAL,CAAWC,IAAX,CAAgBwB,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,YAAIA,GAAG,CAACC,IAAJ,IAAYJ,WAAhB,EAA6B;AAC3B,gBAAKT,QAAL,CAAc;AAAER,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACD;AACF,OAJD;AAKD,K;;;;;;;wCA9CmB;AAClB,WAAKG,aAAL;;AACA,UAAG,CAAC,KAAKT,KAAL,CAAW4B,WAAf,EAA2B;AACzB,YAAIC,QAAQ,GAAGD,WAAW,CAAC,KAAKnB,aAAN,EAAqB,IAArB,CAA1B;AACA,aAAKK,QAAL,CAAc;AAAEV,UAAAA,aAAa,EAAEyB;AAAjB,SAAd;AACD;AACF;;;2CAEqB;AACpB,UAAG,CAAC,KAAK7B,KAAL,CAAWI,aAAf,EAA8B;AAC5B0B,QAAAA,aAAa,CAAC,KAAK9B,KAAL,CAAW+B,WAAZ,CAAb;AACA,aAAKjB,QAAL,CAAc;AAAEV,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD;AACF;;;6BAmCQ;AAAA;;AAAA,UACCH,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAAA,UAECO,gBAFD,GAEsB,KAAKR,KAF3B,CAECQ,gBAFD;AAAA,UAGCF,QAHD,GAGc,KAAKN,KAHnB,CAGCM,QAHD;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,gBAAgB,IAAI,KAApB,GACE,uCADF,GAEEP,IAAI,CAACgB,GAAL,CAAS,UAAAS,GAAG;AAAA,eACZ;AAAI,UAAA,KAAK,EAAE;AAAEM,YAAAA,OAAO,EAAE;AAAX,WAAX;AAAgC,UAAA,GAAG,EAAE/B,IAAI,CAACE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACO;AAAM,UAAA,KAAK,EAAE;AAAE8B,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADP,OACqDP,GAAG,CAACxB,EADzD,OAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD7D,EAEO;AAAM,UAAA,KAAK,EAAE;AAAE+B,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFP,EAGQP,GAAG,CAACvB,OAHZ,OAGqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHrB,EAIO;AAAM,UAAA,KAAK,EAAE;AAAE8B,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJP,OAIuDP,GAAG,CAACC,IAJ3D,CADY;AAAA,OAAZ,CAHL,EAWKrB,QAAQ,IAAI,KAAZ,GACC,wBADD,GAEC,mBAbN,CADA,EAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGE,gBAAgB,IAAI,KAApB,GAEE;AAAK,QAAA,KAAK,EAAE;AAAEwB,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,iBAAI,MAAI,CAACpB,QAAL,CAAc;AAAEX,YAAAA,OAAO,EAAE+B,CAAC,CAACC,MAAF,CAASC;AAApB,WAAd,CAAJ;AAAA,SAFb;AAGE,QAAA,WAAW,EAAC,2CAHd;AAIE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAC;AAAR,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtB,WAAL,CAAiB,MAAI,CAACf,KAAL,CAAWG,OAA5B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARA,CAFF,GAgBG;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACG,QAAA,IAAI,EAAC,MADR;AAEE,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,iBAAI,MAAI,CAACpB,QAAL,CAAc;AAAEa,YAAAA,IAAI,EAAEO,CAAC,CAACC,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAHb;AAIE,QAAA,WAAW,EAAC,sCAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACd,WAAL,CAAiB,MAAI,CAACtB,KAAL,CAAW2B,IAA5B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPA,EAUA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACN,SAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVA,CAlBN,CAlBA,CADF;AAsDD;;;;EAtHexB,S;;AAyHlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    data: [],\n    id: 0,\n    message: null,\n    intervalIsSet: false,\n    idToMatch: null,\n    isAMatch: false,\n    objectToUpdate: null,\n    hasBeenSubmitted: false\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n    if(!this.state.setInterval){\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval});\n    }\n  }\n\n  componentWillUnmount(){\n    if(!this.state.intervalIsSet) {\n      clearInterval(this.state.intervalSet);\n      this.setState({ intervalIsSet: null});\n    }\n  }\n\n  getDataFromDb = () => {\n    fetch(\"http://localhost:3001/api/getData\")\n     .then(data => data.json())\n     .then(res => this.setState({data: res.data}));\n  };\n\n  putDataToDb = message => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    this.setState({ hasBeenSubmitted: true });\n    while(currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n     this.setState({ idToMatch: idToBeAdded })\n     axios.post(\"http://localhost:3001/api/putData\", {\n      id: idToBeAdded,\n      message: message\n    });\n  };\n\n  resetPage = () => {\n    this.setState({ hasBeenSubmitted: false});\n  };\n\n  matchFromDb = codeToMatch => {\n    let objIdToMatch = null;\n    this.state.data.forEach(dat => {\n      if (dat.code == codeToMatch) {\n        this.setState({ isAMatch: true});\n      }\n    })\n  };\n\n  render() {\n    const { data } = this.state;\n    const { hasBeenSubmitted } = this.state;\n    const { isAMatch } = this.state;\n    return (\n      <div>\n      <ul>\n       { hasBeenSubmitted == false\n         ? \"Get a code sent to your phone via SMS\"\n         : data.map(dat => (\n           <li style={{ padding: \"10px\" }} key={data.message}>\n                  <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\n                  <span style={{ color: \"gray\" }}> data: </span>\n                  {dat.message} <br />\n                  <span style={{ color: \"gray\" }}> code: </span> {dat.code}\n                </li>\n         ))}\n         { isAMatch == false\n          ? \"The Code doesn't match\"\n          : \"The Code Matches!\"\n         }\n      </ul>\n\n      <div>\n      {\n         hasBeenSubmitted == false\n         ?\n           <div style={{ padding: \"10px\"}}>\n           <input\n             type=\"text\"\n             onChange={e => this.setState({ message: e.target.value})}\n             placeholder=\"Enter your phone number to recieve a code\"\n             style={{ width:\"200px\"}}\n           />\n\n           <button onClick={() => this.putDataToDb(this.state.message)}>\n           Send Me A Code!\n           </button>\n          </div>\n        :\n\n            <div style={{ padding: \"10px\" }}>\n            <input\n               type=\"text\"\n              style={{ width: \"200px\" }}\n              onChange={e => this.setState({ code: e.target.value })}\n              placeholder=\"Enter the code your recieved via SMS\"\n            />\n            <button onClick={() => this.matchFromDb(this.state.code)}>\n              Check Code\n            </button>\n            <button onClick={() => this.resetPage()}>Reset</button>\n          </div>\n\n      }\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}